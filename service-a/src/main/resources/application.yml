# Configuration for Service A

# Spring Application Name - Used for metrics and logging
spring:
    application:
        name: service-a

# Server settings
server:
    port: 8080

# OpenTelemetry Configuration
management:
    # Enable all web endpoints for management (health, info, prometheus, etc.)
    endpoints:
        web:
            exposure:
                include: "*"

    # Configure tracing behavior
    tracing:
        sampling:
            probability: 1.0

    # Configure Opentelemetry Protocol (OTLP)
    otlp:
        tracing:
            # Endpoint for sending traces
            endpoint: http://otel-collector:4318/v1/traces
        metrics:
            # Endpoint for sending metrics
            endpoint: http://otel-collector:4318/v1/metrics
    metrics:
        export:
            prometheus:
                enabled: true
                
        
# Resilience4j Circuit Breaker Configuration
resilience4j:
    circuitbreaker:
        configs:
            default:
                slidingWindowType: COUNT_BASED
                slidingWindowSize: 2
                minimumNumberOfCalls: 1
                failureRateThreshold: 1
                waitDurationInOpenState: 5s
                permittedNumberOfCallsInHalfOpenState: 1
        instances:
            serviceB:
                baseConfig: default
                recordExceptions:
                    - org.springframework.web.reactive.function.client.WebClientRequestException

# Logging Configuration
# logging:
    # level:
    #     io.github.resilience4j: DEBUG
    #     org.springframework.aop: TRACE